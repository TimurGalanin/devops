---
- name: Get OS type
  debug:
    var: ansible_facts.distribution

- name: Get OS type
  debug:
    var: ansible_user
- name: Update repositories latest postgres
  dnf:
    name: '{{ postgres_url}}'
    state: present
    disable_gpg_check: yes

- name: disable dnf module and clean cache
  shell: |
    echo  dnf -qy module disable postgresql
    dnf -qy module disable postgresql
    echo   dnf clean all
    dnf clean all
    echo yum makecache -y
    yum makecache -y


- name: Update repositories latest postgres
  dnf:
    name:
      - postgresql13-server
      - postgresql13-devel
      - postgresql13-contrib
    state: present
    disable_gpg_check: yes

- name: Update repositories latest postgres
  dnf:
    name:
     - python2-devel
     - python3-devel
     - python3-pip
     - python2-pip
     - libpq
     - libpq-devel
    state: present



- name: Create a symbolic link pg_config
  file:
    src: /usr/pgsql-13/bin/pg_config
    dest: /bin/pg_config
    state: link
- name: count files in /var/lib/pgsql/13/data/
  shell: "ls  /var/lib/pgsql/13/data/ |wc|awk '{print $1}'"
  register: count_pg
- name: debug
  debug:
    var: count_pg

- name: test
  debug:
    msg: "Empty folder. Init db"
  when: count_pg.stdout=='0'

- name: test2
  debug:
    msg: "Dir not Empty Init db passed"
  when: count_pg.stdout!='0'

- name: init_db
  shell: postgresql-13-setup initdb
  when: count_pg.stdout=='0'


#
# - name: Enable a postgresql.service
#   systemd:
#     name: postgresql-13.service
#     state: started
#     enabled: yes

#     update_cache: yes
#       # - postgresql
#       - postgresql11-server
#       - postgresql11-server-dev
#      #  - postgresql-server
#      #  - postgresql-libs
#      # - postgresql-contrib
#      #  - postgresql-devel
      # - postgresql11-server
          # - postgresql10
          # - postgresql10-server

# - name: shell
#   shell: 'pip2 install psycopg2-binary -i http://pip.robointerativo.ru/simple --trusted-host pip.robointerativo.ru'



# - name: Upda2
#   become: postgres
#   pip:
#     name:   psycopg2-binary
#     extra_args: --pg-config /usr/bin/pg_config -i http://pip.robointerativo.ru/simple --trusted-host pip.robointerativo.ru
#     executable: /usr/bin/pip2
    #-
    # virtualenv: /tmp/venv
    # virtualenv_python: python3

# - postgresql_user:
#     # db: acme
#     name: '{{ postgres_user }}'
#     password: '{{ postgres_password}}'
#
#   become: postgres
# #
# - name: Dump an existing database to a file (with compression)
#   postgresql_db:
#     name: '{{item}}'
#   with_items: '{{ postgresql_db}}'
#
#
# - name: GRANT ALL PRIVILEGES ON SCHEMA public, math TO librarian
#   postgresql_privs:
#     db: '{{item}}'
#     privs: ALL
#   with_items: '{{ postgresql_db}}'
